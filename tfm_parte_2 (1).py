# -*- coding: utf-8 -*-
"""TFM parte 2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zHyOTiGz-KC6l7iJx9FeobbY3WI879kM
"""

!pip install seaborn
import numpy as np
import seaborn as sns
import pandas as pd
import matplotlib.pyplot as plt

df=pd.read_excel("/content/superstore.xlsx")
df.head()

df.isnull().sum()

import matplotlib.pyplot as plt
import seaborn as sns

# Distribución de ventas (foco en el 95% de los valores más bajos)
plt.figure(figsize=(8, 4))
sns.histplot(df[df['Sales'] < 2000]['Sales'], bins=50, kde=True)
plt.title('Distribución de Ventas (truncada)')
plt.xlabel('Ventas (<2000)')
plt.tight_layout()
plt.show()

# Distribución de beneficio (truncada)
plt.figure(figsize=(8, 4))
sns.histplot(df[(df['Profit'] > -1000) & (df['Profit'] < 1000)]['Profit'], bins=50, kde=True, color='green')
plt.title('Distribución de Beneficio (truncada)')
plt.xlabel('Beneficio (-1000 a 1000)')
plt.tight_layout()
plt.show()

# Boxplot de descuento
plt.figure(figsize=(6, 4))
sns.boxplot(y=df['Discount'])
plt.title('Distribución del Descuento')
plt.tight_layout()
plt.show()

# Categoría con paleta Set2
plt.figure(figsize=(6, 4))
sns.countplot(data=df, x='Category', hue='Category', palette='Set2', legend=False)
plt.title('Número de ventas por Categoría')
plt.xlabel('Categoría')
plt.ylabel('Cantidad')
plt.tight_layout()
plt.show()

# Modo de envío con Set2 también
plt.figure(figsize=(6, 4))
sns.countplot(data=df, x='Ship Mode', hue='Ship Mode', palette='Set2', legend=False)
plt.title('Frecuencia por Modo de Envío')
plt.xlabel('Modo de Envío')
plt.ylabel('Cantidad')
plt.tight_layout()
plt.show()

def contar_outliers_iqr(df, columna):
    Q1 = df[columna].quantile(0.25)
    Q3 = df[columna].quantile(0.75)
    IQR = Q3 - Q1
    limite_inferior = Q1 - 1.5 * IQR
    limite_superior = Q3 + 1.5 * IQR

    outliers = df[(df[columna] < limite_inferior) | (df[columna] > limite_superior)]
    print(f"Outliers en '{columna}': {len(outliers)} de {len(df)} registros totales")
    return outliers

# Contar outliers en 'Sales' y 'Profit'
outliers_sales = contar_outliers_iqr(df, 'Sales')
outliers_profit = contar_outliers_iqr(df, 'Profit')

plt.figure(figsize=(6, 5))
df['Sub-Category'].value_counts().plot(kind='barh', color="#59A14F")
plt.title('Frecuencia por Subcategoría')
plt.tight_layout()
plt.show()

plt.figure(figsize=(5, 5))
df['Region'].value_counts().plot.pie(
    autopct='%1.1f%%', startangle=90, colors=sns.color_palette('Set3'))
plt.ylabel('')
plt.title('Distribución por Región')
plt.tight_layout()
plt.show()

variables_categoricas = ['Category', 'Sub-Category', 'Segment', 'Ship Mode', 'Region']

for var in variables_categoricas:
    plt.figure(figsize=(6, 4))
    sns.countplot(data=df, x=var, palette='Set2')
    plt.title(f'Frecuencia por {var}')
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.show()





plt.figure(figsize=(5, 4))
sns.heatmap(df[['Sales', 'Profit', 'Discount', 'Quantity']].corr(), annot=True, cmap='coolwarm')
plt.title('Matriz de Correlación')
plt.tight_layout()
plt.show()